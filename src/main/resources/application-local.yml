server:
  port: 8080
  address: 0.0.0.0
  tomcat:
    mbeanregistry:
      enabled: true

  servlet:
    session:
      timeout: 120m
      cookie:
        name: JSESSIONID        # 쿠키 이름
        http-only: true         # JS에서 접근 불가
        secure: false           # https에서만 필요 시 true
        same-site: none

logging:
  level:
    root: INFO
    org.springframework: DEBUG
    org.springframework.transaction: DEBUG
    org.springframework.orm.jpa.JpaTransactionManager: DEBUG
    org.hibernate: ERROR
    org.hibernate.SQL: OFF
    org.hibernate.type.descriptor.sql: OFF
    com.zaxxer.hikari: DEBUG

spring:
  thymeleaf:
    encoding: UTF-8
  application:
    name: SanSam
  config:
    activate:
      on-profile: local

  cache:
    type: caffeine
    caffeine:
      spec: initialCapacity=10,maximumSize=100,expireAfterWrite=24h

  rabbitmq:
    host: localhost
    port: 5672
    username: dev
    password: dev
    template:
      mandatory: true
    publisher-confirm-type: correlated
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 200  #쌓을 수 있는 최대 양인데, 이거 맞나 200개면 500개 버티는데, 200개면 충분하겠지.
        concurrency: 3 #동시에 3개 적당한가...이것도 고민좀 해보고

  #  mvc:
#    async:
#      request-timeout: 1800000   # 30분 (ms 단위)

#  datasource:
#    url: ${DB_URL}
#    username: ${USER_NAME}
#    password: ${DB_PASSWORD}
#    driver-class-name: com.mysql.cj.jdbc.Driver
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 40
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      keepalive-time: 300000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate.show_sql: false
      hibernate.format_sql: false
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    open-in-view: false # 이것도 찾아보세요!!!
  batch:
    jdbc:
      initialize-schema: never   # 앱 실행 시 메타 테이블 자동 생성
    job:
      enabled: false              # 앱 시작할 때 배치 잡 자동 실행하지 않음 (테스트/스케줄러로만 실행)

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}    # 앱 비밀번호 (환경변수)
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    default-encoding: UTF-8

#    decorator:
#      datasource:
#        p6spy:
#          enable-logging: true
#          multiline: true
#          logging: slf4j
#          tracing:
#            include-parameter-values: true

toss:
  secret-key: test_gsk_docs_OaPz8L5KdmQXkzRz3y47BMw6
  confirm-url: https://api.tosspayments.com/v1/payments/confirm
  cancel-url: https://api.tosspayments.com/v1/payments


management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, info, metrics
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
      slo:
        "[http.server.requests]": 200ms,500ms,1s,2s,5s,10s,30s
    enable:
      tomcat: true
  endpoint:
    health:
      probes:
         enabled: true
      group:
        readiness:
          exclude: elasticsearch

cloud:
  aws:
    s3:
      bucket: ${AWS_BUCKET_NAME}
      custom:
        dir: /images
        defaultUrl: https://your-bucket-name.s3.ap-northeast-2.amazonaws.com/
      path:
        review: reviews
    region:
      static: ap-northeast-2
    stack:
      auto: false
    credentials:
      accessKey: ${AWS_ACCESS_KEY}
      secretKey: ${AWS_SECRET_KEY}
cors:
  allowed-origins: http://localhost:3000
websocket:
  allowed-origins: "http://localhost:3000"